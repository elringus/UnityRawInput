using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text.RegularExpressions;

namespace UnityRawInput
{
    public partial struct RawKey
    {
        /// <summary>
        /// Create a RawKey from a string
        /// </summary>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static RawKey FromString (string value)
        {
            // Return early if string is null/empty
            if (string.IsNullOrEmpty(value))
                return new RawKey();

            switch (value.ToLowerInvariant())
            {
                case "leftbutton":
                case "leftclick":
                case "mouse1":
                case "m1":
                    return LeftButton;
                case "rightbutton":
                case "rightclick":
                case "mouse2":
                case "m2":
                    return RightButton;
                case "ctrlbreak":
                case "cancel":
                    return Cancel;
                case "middlebutton":
                case "middleclick":
                case "mouse3":
                case "m3":
                    return MiddleButton;
                case "extrabutton1":
                case "xbutton1":
                case "xb1":
                case "mouse4":
                case "m4":
                    return ExtraButton1;
                case "extrabutton2":
                case "xbutton2":
                case "xb2":
                case "mouse5":
                case "m5":
                    return ExtraButton2;
                case "backspace":
                case "back":
                    return Back;
                case "tab":
                    return Tab;
                case "numpadclear":
                case "clear":
                    return Clear;
                case "return":
                case "enter":
                    return Return;
                case "shift":
                    return Shift;
                case "ctrl":
                case "control":
                    return Control;
                case "menu":
                case "alt":
                    return Menu;
                case "pause":
                    return Pause;
                case "capslock":
                    return CapsLock;
                case "kana":
                case "hangeul":
                case "hangul":
                    return Kana;
                case "junja":
                    return Junja;
                case "final":
                    return Final;
                case "hanja":
                case "kanji":
                    return Hanja;
                case "escape":
                case "esc":
                    return Escape;
                case "convert":
                    return Convert;
                case "nonconvert":
                    return NonConvert;
                case "accept":
                    return Accept;
                case "modechange":
                case "change":
                    return ModeChange;
                case "space":
                    return Space;
                case "numpadpgup":
                case "prior":
                    return Prior;
                case "next":
                case "numpadpagedown":
                case "numpgdn":
                    return Next;
                case "end":
                case "numpadend":
                case "numend":
                    return End;
                case "home":
                case "numpadhome":
                case "numhome":
                    return Home;
                case "left":
                case "numpadleft":
                case "numleft":
                    return Left;
                case "up":
                case "numpadup":
                case "numup":
                    return Up;
                case "right":
                case "numpadright":
                case "numright":
                    return Right;
                case "down":
                case "numpaddown":
                case "numdown":
                    return Down;
                case "select":
                    return Select;
                case "print":
                    return Print;
                case "execute":
                    return Execute;
                case "printscreen":
                    return Snapshot;
                case "numpadinsert":
                case "numinstert":
                case "numins":
                case "insert":
                    return Insert;
                case "numpaddelete":
                case "numpaddel":
                case "numdel":
                case "delete":
                    return Delete;
                case "help":
                    return Help;
                case "0":
                case "n0":
                    return N0;
                case "1":
                case "n1":
                    return N1;
                case "2":
                case "n2":
                    return N2;
                case "3":
                case "n3":
                    return N3;
                case "4":
                case "n4":
                    return N4;
                case "5":
                case "n5":
                    return N5;
                case "6":
                case "n6":
                    return N6;
                case "7":
                case "n7":
                    return N7;
                case "8":
                case "n8":
                    return N8;
                case "9":
                case "n9":
                    return N9;
                case "a":
                    return A;
                case "b":
                    return B;
                case "c":
                    return C;
                case "d":
                    return D;
                case "e":
                    return E;
                case "f":
                    return F;
                case "g":
                    return G;
                case "h":
                    return H;
                case "i":
                    return I;
                case "j":
                    return J;
                case "k":
                    return K;
                case "l":
                    return L;
                case "m":
                    return M;
                case "n":
                    return N;
                case "o":
                    return O;
                case "p":
                    return P;
                case "q":
                    return Q;
                case "r":
                    return R;
                case "s":
                    return S;
                case "t":
                    return T;
                case "u":
                    return U;
                case "v":
                    return V;
                case "w":
                    return W;
                case "x":
                    return X;
                case "y":
                    return Y;
                case "z":
                    return Z;
                case "leftwindows":
                case "lwin":
                case "leftos":
                case "los":
                    return LeftWindows;
                case "rightwindows":
                case "rwin":
                case "rightos":
                case "ros":
                    return RightWindows;
                case "appskey":
                case "apps":
                case "application":
                    return Application;
                case "sleep":
                    return Sleep;
                case "num0":
                case "numpad0":
                    return Numpad0;
                case "num1":
                case "numpad1":
                    return Numpad1;
                case "num2":
                case "numpad2":
                    return Numpad2;
                case "num3":
                case "numpad3":
                    return Numpad3;
                case "num4":
                case "numpad4":
                    return Numpad4;
                case "num5":
                case "numpad5":
                    return Numpad5;
                case "num6":
                case "numpad6":
                    return Numpad6;
                case "num":
                case "numpad7":
                    return Numpad7;
                case "num8":
                case "numpad8":
                    return Numpad8;
                case "num9":
                case "numpad9":
                    return Numpad9;
                case "mult":
                case "multiply":
                case "nummult":
                case "numpadmultiply":
                    return Multiply;
                case "add":
                case "numadd":
                case "numpadadd":
                    return Add;
                case "separator":
                    return Separator;
                case "sub":
                case "subtract":
                case "numsub":
                case "numpadsubtract":
                    return Subtract;
                case "dec":
                case "decimal":
                case "numpaddecimal":
                case "numdec":
                case "numpaddot":
                case "numdot":
                    return Decimal;
                case "div":
                case "divide":
                case "numdiv":
                case "numpaddivide":
                    return Divide;
                case "f1":
                    return F1;
                case "f2":
                    return F2;
                case "f3":
                    return F3;
                case "f4":
                    return F4;
                case "f5":
                    return F5;
                case "f6":
                    return F6;
                case "f7":
                    return F7;
                case "f8":
                    return F8;
                case "f9":
                    return F9;
                case "f10":
                    return F10;
                case "f11":
                    return F11;
                case "f12":
                    return F12;
                case "f13":
                    return F13;
                case "f14":
                    return F14;
                case "f15":
                    return F15;
                case "f16":
                    return F16;
                case "f17":
                    return F17;
                case "f18":
                    return F18;
                case "f19":
                    return F19;
                case "f20":
                    return F20;
                case "f21":
                    return F21;
                case "f22":
                    return F22;
                case "f23":
                    return F23;
                case "f24":
                    return F24;
                case "numpadlock":
                case "numlock":
                    return NumLock;
                case "scrolllock":
                    return ScrollLock;
                case "jisho":
                case "fujitsujisho":
                case "necequal":
                    return Fujitsu_Jisho;
                case "mashu":
                case "masshou":
                case "fujitsumasshou":
                    return Fujitsu_Masshou;
                case "touroku":
                case "fujitsutouroku":
                    return Fujitsu_Touroku;
                case "loya":
                case "fujitsuloya":
                    return Fujitsu_Loya;
                case "roya":
                case "fujitsuroya":
                    return Fujitsu_Roya;
                case "lclickalt":
                case "leftclickalt":
                case "lbuttonalt":
                case "leftbuttonalt":
                    return LeftButtonAlt;
                case "rclickalt":
                case "rightclickalt":
                case "rbuttonalt":
                case "rightbuttonalt":
                    return RightButtonAlt;
                case "wheelleft":
                    return WheelLeft;
                case "wheelright":
                    return WheelRight;
                case "wheeldown":
                    return WheelDown;
                case "wheelup":
                    return WheelUp;
                case "lshift":
                case "leftshift":
                    return LeftShift;
                case "rshift":
                case "rightshift":
                    return RightShift;
                case "lcontrol":
                case "leftcontrol":
                    return LeftControl;
                case "rcontrol":
                case "rightcontrol":
                    return RightControl;
                case "lmenu":
                case "leftmenu":
                case "lalt":
                case "leftalt":
                    return LeftMenu;
                case "rmenu":
                case "rightmenu":
                case "ralt":
                case "rightalt":
                    return RightMenu;
                case "browserback":
                    return BrowserBack;
                case "browserforward":
                    return BrowserForward;
                case "browserrefresh":
                    return BrowserRefresh;
                case "browserstop":
                    return BrowserStop;
                case "browsersearch":
                    return BrowserSearch;
                case "browserfavorites":
                    return BrowserFavorites;
                case "browserhome":
                    return BrowserHome;
                case "volumemute":
                    return VolumeMute;
                case "volumedown":
                    return VolumeDown;
                case "volumeup":
                    return VolumeUp;
                case "medianext":
                case "medianexttrack":
                    return MediaNextTrack;
                case "mediaprev":
                case "mediaprevtrack":
                    return MediaPrevTrack;
                case "mediastop":
                    return MediaStop;
                case "mediaplay":
                case "mediapause":
                case "mediaplaypause":
                    return MediaPlayPause;
                case "mail":
                case "launchmail":
                    return LaunchMail;
                case "media":
                case "launchmedia":
                    return LaunchMediaSelect;
                case "app1":
                case "launchapp1":
                    return LaunchApplication1;
                case "app2":
                case "launchapp2":
                    return LaunchApplication2;
                case "oem1":
                    return OEM1;
                case "oemplus":
                    return OEMPlus;
                case "oemcomma":
                    return OEMComma;
                case "oemminus":
                case "minus":
                    return OEMMinus;
                case "oemperiod":
                    return OEMPeriod;
                case "oem2":
                    return OEM2;
                case "oem3":
                    return OEM3;
                case "international1":
                    return International1;
                case "numpadcomma":
                case "braziliancomma":
                    return BrazilianComma;
                case "oem4":
                    return OEM4;
                case "oem5":
                    return OEM5;
                case "oem6":
                    return OEM6;
                case "oem7":
                    return OEM7;
                case "oem8":
                    return OEM8;
                case "oem102":
                    return OEM102;
                case "processkey":
                    return ProcessKey;
                case "packet":
                    return Packet;
                case "oemreset":
                    return OEMReset;
                case "oemjump":
                    return OEMJump;
                case "international5":
                case "intl5":
                case "oempa1":
                    return OEMPA1;
                case "oempa3":
                    return OEMPA3;
                case "oemwsctrl":
                    return OEMWSCtrl;
                case "oemfinish":
                    return OEMFinish;
                case "oemauto":
                    return OEMAuto;
                case "oembacktab":
                    return OEMBackTab;
                case "attn":
                    return ATTN;
                case "crsel":
                    return CRSel;
                case "exsel":
                    return EXSel;
                case "ereof":
                    return EREOF;
                case "play":
                    return Play;
                case "zoom":
                    return Zoom;
                case "noname":
                    return Noname;
                case "pa1":
                    return PA1;
                case "oemclear":
                    return OEMClear;
                case "international2":
                case "intl2":
                    return International2;
                case "international4":
                case "intl4":
                    return International4;
                case "international3":
                case "intl3":
                    return International3;
                case "oemmax":
                case "max":
                    return OEMAX;
                case "icohelp":
                    return ICOHelp;
                case "ico00":
                case "00":
                    return ICO00;
                case "icoclear":
                    return ICOClear;
                case "oempa2":
                    return OEMPA2;
                case "oemcusel":
                    return OEMCUSel;
                case "oemattn":
                    return OEMATTN;
                case "oemenlw":
                    return OEMENLW;
                case "oemcopy":
                    return OEMCopy;
                default:
                    // If no match against the above, attempt to search against the "special key" syntax
                    // https://autohotkey.com/docs/commands/Send.htm#vk

                    // Declare variables
                    var regex = RegexOptions.IgnoreCase;
                    var style = NumberStyles.HexNumber;
                    var culture = CultureInfo.InvariantCulture;

                    // Attempt to parse regex of "vk##" and "sc###", store if successful in bools
                    var vkParse = byte.TryParse(Regex.Match(value, @"(?i)vk[\da-f]{2}", regex)
                        .ToString().Replace("vk", ""), style, culture, out var vk);
                    var scParse = ushort.TryParse(Regex.Match(value, @"(?i)sc[\da-f]{3}", regex)
                        .ToString().Replace("sc", ""), style, culture, out var sc);

                    // Exclusive-Or check to see if both or neither match.
                    //
                    // If successful, pass on as virtual key and scan code args (both matching sets up unique key,
                    // neither matching is functionally a new RawKey)
                    //
                    // If only one matches, then check against whichever one succeeded in the parsing process; this will
                    // check against the readonly dictionaries both to support entering only one of these special key
                    // arguments, and as a final fallback attempt before simply returning a new RawKey
                    return !(vkParse ^ scParse) ? new RawKey(vk, sc) : vkParse ? FromVirtualKey(vk) : FromScanSode(sc);
            }
        }
    }
}
